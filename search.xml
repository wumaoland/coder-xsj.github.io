<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[XAMPP的下载安装及使用]]></title>
    <url>%2F2019%2F09%2F18%2FXAMPP%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[XAMPP的下载安装及使用下载 ​ 下载网址：https://www.apachefriends.org/index.html ​ ​ 三个版本可供使用，根据自己电脑系统选择 ​]]></content>
  </entry>
  <entry>
    <title><![CDATA[CentOs搭建Zblog]]></title>
    <url>%2F2019%2F08%2F10%2FCentOs%E6%90%AD%E5%BB%BAZblog%2F</url>
    <content type="text"><![CDATA[今天是2019/07/20 2:21:50分已失眠有三晚了，今晚准备做些啥呢？正好有一台服务器被闲置住了，那就部署一个属于自己的博客吧！说干就干。下载开源博客系统Z-Blog，它是基于php开发的博客系统，自然我的CentOs服务器上也要安装php服务。所以我想到了安装lamp环境，也就是Linux+apache+MySQL+php这套环境。参考大佬的https://www.cnblogs.com/me80/p/7218883.html#4304489&gt; 这篇文章复制大佬的，加上一些自己的 1.准备环节关闭防火墙1systemctl stop firewalld 永久关闭(此次不生效)1systemctl disable firewalld selinux关闭防火墙1setenforce 0 查看防火墙状态1systemctl status firewalld 2.安装软件Apache安装apache1yum -y install httpd ​ 开启服务123456# 开启systemctl start httpd# 开机自启systemctl enable httpd# 查看状态systemctl status httpd 浏览登录，还是打不开​ 原因是因为我是云服务器，阿里安全策略组未开放80端口，去阿里控制台开放了80端口即可 3. 安装MySQL安装mysql123456[root@coder-xsj ~]# yum install mariadb mariadb-server mariadb-libs mariadb-devel[root@coder-xsj ~]# rpm -qa |grep mariamariadb-libs-5.5.52-1.el7.i686mariadb-5.5.52-1.el7.i686mariadb-server-5.5.52-1.el7.i686mariadb-devel-5.5.52-1.el7.i686 开启mysql服务，并设置开机启动123[root@coder-xsj ~]# chmod -R 777 /var/www/html[root@coder-xsj ~]# systemctl start mariadb [root@coder-xsj ~]# systemctl enable mariadb 创建zlog所需要的数据库123[root@coder-xsj ~]# mysql -u root -pMariaDB [(none)]&gt; create database zlogMariaDB [(none)]&gt; quit 4.安装PHP及其常用模块安装php12[root@coder-xsj ~]# yum -y install php[root@coder-xsj ~]# yum install -y php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel php-bcmath 将php与mysql关联起来1[root@coder-xsj ~]# yum install php-mysql 安装常用PHP模块1[root@coder-xsj ~]# yum install -y php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel php-bcmath 测试PHP12345[root@coder-xsj ~]# cat &gt;&gt; index.php &lt;&lt; EOF&lt;?phpphpinfo();?&gt;EOF 重启apache服务器1[root@coder-xsj ~]# systemctl restart http 将zlog代码远程发送到服务器上，安装一个远程工具12[root@coder-xsj ~]# yum install lrzsz -y[root@coder-xsj ~]# rz 将代码解压到/var/www/html/xsj_blog下，浏览器打开即将运行Z-Blog部署程序1234[root@coder-xsj ~]# mkdir /var/www/html/xsj_blog[root@coder-xsj ~]# mv Z-BlogPHP_1_5_2_1935_Zero.zip /var/www/html/xsj_blog/[root@coder-xsj ~]# cd /var/www/html/xsj_blog/xsj_blog[root@coder-xsj html]# unzip Z-BlogPHP_1_5_2_1935_Zero.zip4.4 5.安装部署浏览器访问zlog目录，发现无法创建数据库发现问题，没有给目录权限1[root@coder-xsj html]# chmod -R 777 /var/www/html/zlog 部署完成​​]]></content>
  </entry>
  <entry>
    <title><![CDATA[PHP笔记]]></title>
    <url>%2F2019%2F08%2F10%2FPHP%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[启动navcat cd /usr/tar/navicat121_mysql_cs_x64 ./start_navicat 修改php.ini上传文件大小限制 vim /etc/php/7.0/apache2/php.ini 文件上传最大上传的限制：upload_max_filesize 查找upload_max_filesize /upload_max_filesize post_max_size:代表允许POST的数据最大字节长度，如果POST数据超出限制，那么$_POST和$_FILES将会为空。 查找post_max_size: /psot_max_size 修改为64M或更大 注意：要上传大文件，你必须设定该选项值大于 upload_max_filesize指令的值 php扩展.so文件 ls /usr/lib/php/20151012/ php扩展的.ini配置文件 ls /etc/php/7.0/mods-available PHP升级到5.6：https://blog.csdn.net/Jackchenyidaiweiren/article/details/80298491CentOs 7.*中配置安装phpMyAdmin的完整步骤记录：https://www.jb51.net/article/143548.htm项目中的两张表结构用户表im_user 名字 类型 长度 注释 id int 11 用户id（主键） username varchar 50 用户名 password varchar 50 密码 create_time int 11 发布时间 商品表im_goods 名字 类型 长度 注释 id int 11 商品id（主键） name varchar 100 商品名 price int 11 商品价格 des varchar 200 商品简介 content longtext 商品详情 pic varchar 255 商品图片 user_id int 11 发布人（用户id） create_time int 11 发布时间 update_time int 11 修改时间 view int 11 浏览次数 status int 1 删除状态(-1 删除 1 正常) form表单中声明表中有上传文件的存在 enctype=&quot;multipart/form-data&quot; 学到的函数1234567891011121314mysqli_real_escape_string($con, trim($_POST['name'])) // 注意有个参数$con$nameLenth = mb_strlen($name, 'utf-8'); // 汉字的长度// 转int型intval() // 返回表中插入的id值$userId = mysqli_insert_id($con); $userId = $con-&gt;insert_id;// 影响行数$affected_rows = $con-&gt;affected_rows; 操作数据库中数据的两条标准1.这个人有这个权限操作 2.这条数据在数据库中存在 edit.php 判断登录状态 判断是否post请求 校验传来的id，查询商品信息做出结果 do_edit.php 判断登录状态 判断是否post请求连接数据库 查询商品信息放到$goods数组中 将从表单提交过来的数据从$_POST中拿出来 做数据校验，是否合法 将数据拿出存入update数组中 判断用户是否上传图片，有的话存入update数组 对比$goods数组中和update数组中的内容，若用户没有修改，则unset掉、 如果update数组为空，则直接报告修改成功 利用foreach循环来拼接sql语句 删除多余逗号和空格 做修改后的商品名称唯一性处理 执行update的SQL语句 OK 实际项目开发中，不会真正的删除商品，而是用status状态来标志是否删除，1 正常 -1删除怎么样更改呢？ 数据表中增加status字段 sql语句由delete改为update语句 若查询遇到错误怎么有效的处理？直接echo $sql语句，然后放到数据可视化工具中运行，若成功的话继续排错，多半是错在这里了，因为有些变量前为加引号 例如 name = {$name}这样就会出错应要写成 name = &#39;{$name}&#39; 我的邮箱:fibonacci701408733@163.com 数据库连接link_db.php利用mysqli类来实例化对象1234567$host = '127.0.0.1';$db_user = 'root';$pwd = '3.1415926';$dbname = 'imooc_mall';$port = '3306';// 连接数据库$con = new mysqli($host, $db_user, $pwd, $dbname, $port); 其中构造函数需要（主机地址，用户名，密码，数据库名，端口号） 通过connect_errno数据成员可判断数据库是否连接成功 通过connect_error数据成员可知道错误信息 [“connect_errno”]=&gt; int(0) 成功 [“connect_errno”]=&gt; int(2002) 失败 [“connect_error”]=&gt; NULL 成功 [“connect_error”]=&gt; string(18)”Connection refused” 失败 12345// 判断是否连接成功if($con-&gt;connect_errno)&#123; die("连接失败".$con-&gt;connect_error);&#125; 怎用利用php执行sql语句实行对数据库的CURD操作呢？在上步数据库连接操作上，连接成功会返回一个$con对象，利用此对象的成员函数query()来执行sql语句，从而达到对数据库的操作。 先准备好sql语句放入$sql中 1$sql = "SELECT * FROM im_user id = &#123;$id&#125;"; 执行$con-&gt;query($sql)函数，若sql语句执行成功它对返回一个mysqli_result类的一个对象，查询失败返回bool(false) 12345$result = $con-&gt;query($sql);if($result == FALSE)&#123; die("SQL语句错误");&#125; 怎么样拿到查询到的结果呢？ 可以使用$result对象来执行fetch_array(MYSQLI_ASSOC)函数来拿 3.1 取一条记录 1$row = $result-&gt;fetch_array(MYSQLI_ASSOC); 3.2 若要拿到多条数据,则需要使用while循环来处理，将结果集存入一个二位数组$rows中 12345$rows = [];while($row = $result-&gt;fetch_array(MYSQLI_ASSOC))&#123; $rows[] = $row;&#125; 3.3 fetch_array() 函数使用一个常量来表示所返回数组的类型： 常量 描述 MYSQL_ASSOC 返回的数据列使用字段名作为数组的索引名。 MYSQL_BOTH 返回的数据列使用字段名及数字索引作为数组的索引名。 MYSQL_NUM 返回的数据列使用数字索引作为数组的索引名。索引从 0 开始，表示返回结果的第一个字段。 补充步骤2：若执行的sql语句是成功的，可以继续划分，若像SELECT *这样是可以返回查询到的结果时，此时返回的是一个$mysqli_result的对象，否则像UPDATE、DELETE此类sql语句是不会有返回值的这种，此时会返回bool(true) 当用户注册成功时，我们要把用户所注册的账号信息给存入到数据表中，但是要求密码不能以明码存入数据表中，PHP该如何处理呢？所做的处理就是加密后存入数据库中,PHP提供的md5加密函数，它将提供把明文转化成一个32位的字符串。 实际会用双层md5加密，在第一层加密之后，加上一个常数在进行加密一次 封装成一个函数createPassword 12345678910// 密码加密处理function createPassword($password)&#123; if(!$password) &#123; return false; &#125; // 返回md5加密后的密码 return md5(md5($password).'xsj'); &#125; 另一种就是散列表查找 用password_hash()进行加密处理，password_verify()来进行验证处理 12345678910$password = "123456";$hash = password_hash($password, PASSWORD_DEFAULT);if(password_verify($password, $hash))&#123; echo 'Password is valid!';&#125; else &#123; echo 'Invalid password.';&#125; php加密 https://www.baidu.com/s?ie=UTF-8&amp;wd=php%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E5%87%BD%E6%95%B0 要始终保持对用户输入的不信任机制，其表现在对用户输入的数据，在拿到时要进行数据处理 1234567if(!empty($_POST['username']))&#123; // 对用户输入的数据做删两边空格处理 $username = trim($_POST['username']); $password = trim($_POST['password']); $repassword = trim($_POST['repassword']);&#125; 流程控制的替代语法(PHP 4, PHP 5, PHP 7) PHP 提供了一些流程控制的替代语法，包括 if，while，for，foreach 和 switch。替代语法的基本形式是把左花括号（{）换成冒号（:），把右花括号（}）分别换成 *endif;，endwhile;，endfor;，*endforeach; 以及 endswitch;。 12345678910111213141516if($expression1 == TRUE): statement1;elseif($expression2 == TRUE): statement2;else: statement2;endif;$sum = 0;for($i = 1; $i &lt;= 100; $i++): $sum += $i;endfor;foreach($array as $value): statements;endforeach; 实例： 123456// 笑脸还是哭脸&lt;?php if ($type == 1):?&gt; &lt;span class="smile_face"&gt;:)&lt;/span&gt; &lt;?php else:?&gt; &lt;span class="smile_face"&gt;:(&lt;/span&gt;&lt;?php endif;?&gt; 123// 上午好，中午好，下午好，晚上好$time = time();if($time &lt;= 10) php中time()与$_SERVER[REQUEST_TIME]用法区别记住$_SERVER[&#39;REQUEST_TIME&#39;]是得到请求开始的时间，time()返回当前的Unix时间戳，稍有区别 123456789date_default_timezone_set('PRC'); sleep(5);//php脚本睡5秒echo "time(): ", date('Y-m-d H:i:s',time());//获取当前系统时间的时间戳echo '&lt;hr /&gt;';echo 'SERVER REQUEST_TIME:', date('Y-m-d H:i:s',$_SERVER['REQUEST_TIME']);//得到请求此php脚本时的时间戳// 输出结果time(): 2019-07-17 16:07:59SERVER_REQUEST_TIME:2019-07-17 16:07:54 可见time()获取的是睡5秒之后的时间，但$_SERVER[&#39;REQUEST_TIME&#39;]是获取请求开始的时间 所写的这几个页面login.php, register.php, edit.php,publish.php，通常都是form表单action=&quot;register.php&quot;提交给本页面(自己)，然后在上面的php代码中，根据是否POST提交来做以下的步骤 1234567891011// register.php// 表单的action提交到本页面&lt;form class="login-table" name="register" id="register-form" action="register.php" method="post"&gt;// 判断是否为post提交&lt;?php if(!empty($_POST['username'])) &#123; // statements &#125;?&gt; 设计用户表，从而完成用户的登录，注册模块开发以及用户权限的设置 完成了商品的发布，修改，删除，显示的开发也掌握了怎么做一个分页的商品列表查询 大型商城购物系统ECSHOP3的安装，配置，商品管理，促销管理 为什么修改本地css文件之后刷新浏览器，却没有起作用呢？因为浏览器一开始会缓存本地的文件，从而达到第一次打开之后，后面就会很快的打开的效果，这时候你修改了cs 文件，其实浏览器显示的是本地的缓存，这时候用ctrl+f5进行强制刷新浏览器即可。 regiser.php 是否为POST请求 拿到$username, $password, $repassword 进行一系列判断（是否为空，密码是否一致） 连接数据库，做用户名唯一性处理，根据用户名在库中查询是否有匹配的 如果$total存在且大于0，则跳回注册页面，重新注册，没有继续往下。 执行INSERT INTO语句将数据插入用户表中，插入之前并把密码做加密处理 提示注册成功并跳转到登录页面 login.php 是否已登录(就是$_SESSION是否已存在) 是否为POST请求（$_POST是否存在） 拿到用户输入的用户名和密码,判断是否为空 根据用户名在库中查询是否有匹配的,$row是否为数组且不为空 如果$total存在且大于0，我们就继续做密码验证，把用户输入的密码做相同的md5加密，进行匹配处理 如果正确，跳转到index.php,否则提示用户“密码错误”并跳转到登录页面 跳转到index.php之前，我们要把拿到的结果存入$_SESSION变量中才可 12345678910// 检查登录状态function checkLogin()&#123; session_start(); if(!isset($_SESSION['user']) || empty($_SESSION['user'])) &#123; return FALSE; &#125; return TRUE; &#125; index.php 判断是否登录，把结果存入$login中并拿到用户名 做页面分页处理（会详讲） 查询商品表中删除状态status = 1的所有记录，并做记录数LIMIT 限制 利用while循环把所有内容存放到一个二维数组$goods中 根据登录状态来显示右上角是否的连接，若已登录显示用户名，发布，退出等信息，否则显示登录，注册按钮引导用户登录 根据登录状态来判断是否显示编辑，删除按钮,编辑和删除的a链接中要带上当前商品的id 利用foreach来循环显示商品内容 修改do_edit把验证商品名唯一性调换到用户修改画品之后 edit.php 判断是否登录 校验商品id，若 存在$_GET[&#39;id&#39;]且is_numeric($_GET[&#39;id&#39;])，则做取整处理，否则为空 根据index.php GET方式传来的商品id，查询对应的商品信息 将其查询到的结果填入HTML标签中 do_edit.php 判断是否POST提交 根据商品id校验数据库中的商品信息放入$goods中 拿到用户刚修改过的的数据分别放入对应的变量中 然后做数据校验（字数范围，价格范围） 验证修改过的画品名是否已存在于数据库中 我们只更新修改过的数据，这就需要作对比 把修改过的数据存放数组中，利用循环进行判断，如果相同则unset掉 再用循环进行sql语句的拼接 执行sql语句即可 PHP存进去的UNIX时间戳转换成日期的时候遇到误差8个小时是什么问题？ 答：是因为时间区域原因，修改php配置文件php.ini中的相关设置是修改php.ini中的 date.timezone 参数： 12345678910[Date]; Defines the default timezone used by the date functions;date.timezone =默认是关闭的，只需把注释去掉，改为即可[Date]; Defines the default timezone used by the date functionsdate.timezone = PRC 其中PRC是“中华人民共和国”！ 功能介绍 网站注册即是管理员 实现用户的注册，登录，退出 商品的发布，修改，删除 页面分页功能，浏览次数 亲切的问好(Good morning!) 实现技术 用户登录，注册，商品发布，修改时等不满足要求的提示使用jQuery+layer插件完成前端验证 密码md5加“糖”处理 所有操作的提示跳转封装到msg函数中 用户名唯一性，商品名唯一性 图片上传 网页元素动画部分由李浩实现，包括右上角的实时时间 网页用户登录，注册，退出，商品发布，修改，删除及分页由徐升进完成 http://47.100.78.153/ 远程文件传输工具lrzsz12[root@coder-xsj ~]# yum install lrzsz -y[root@coder-xsj ~]# rz 阿里云开放端口 11. 安全组 将MySQL表中id重置，注意：记录会被清空 1truncate table cat 今天开完会，感觉学长们学习的技术都很跟上时代，又让我有动力去学习Linux运维知识了。 session 时常配置 php.ini中 session.gc_maxlifetime=1440 配置文件中 12345678return array( 'SESSION_OPTIONS' =&gt; array( 'name' =&gt; 'BJYSESSION', //设置session名 'expire' =&gt; 180, //SESSION过期时间，单位秒 'use_trans_sid' =&gt; 1, //跨页传递 'use_only_cookies' =&gt; 0, //是否只开启基于cookies的session的会话方式 ),) Array提供了一种顺序存储一组元素的功能，并可以按索引来读写。 练习：在新生欢迎会上，你已经拿到了新同学的名单，请排序后显示：欢迎XXX，XXX，XXX和XXX同学！： 123456'use strict'; var arr = ['小明', '小红', '大军', '阿黄']; arr.sort();console.log('欢迎' + arr.slice(0, 3) + '和' + arr.slice(3, 4) + '同学！');let t = arr.pop();console.log(`欢迎$&#123;arr.toString()&#125;和$&#123;t&#125;同学！`); 提示框 12var height = parseFloat(prompt('请输入身高(m):'));var weight = parseFloat(prompt('请输入体重(kg):')); 为了解决块级作用域，ES6引入了新的关键字let，用let替代var可以申明一个块级作用域的变量： 登录模块 admin.php?c=login&amp;a=index 后台模块 http://report.com/admin.php?c=index glassfish java ee 服务器软件]]></content>
  </entry>
  <entry>
    <title><![CDATA[testagain]]></title>
    <url>%2F2019%2F08%2F10%2Ftestagain%2F</url>
    <content type="text"><![CDATA[This is a test image article]]></content>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F08%2F10%2Ftest%2F</url>
    <content type="text"><![CDATA[This is a test article.]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
